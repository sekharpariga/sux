
## BIOS
  BIOS cannot simply load a file that represents your operating system from a disk, since BIOS has no notion of a filesystem. BIOS must read specific sectors of data (usually 512 bytes in size) from specific physical locations of the disk devices. So, the easiest place for BIOS to find our OS is in the first sector of one of the disks (i.e. Cylinder 0, Head 0, Sector 0), known as the boot sector. Since some of our disks may not contain an operating systems (they may simply be connected for additional storage), then it is important that BIOS can determine whether the boot sector of a particular disk is boot code that is intended for execution or simply data.
  Note that the CPU does not differentiate between code and data: both can be interpreted as CPU instructions.

### How does the dumb BIOS knows that it found an OS not your weird p*** files.

  The last two bytes of an intended boot sector must be set to the magic number 0xaa55. So, BIOS loops through each storage device , reads the boot sector into memory, and instructs the CPU to begin executing the first boot sector it finds that ends with the magic number.


### Remember
  it is us that program the computer, and the computer follows our instructions blindly, fetching and executing them, until it is switched off; so we need to make sure that it executes our crafted code rather than random bytes of data held somewhere in memory. At this low level, we have a lot of power and responsibility over our computer, so we need to learn how to control it.
